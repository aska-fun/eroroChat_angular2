<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
<link rel="stylesheet" href="../css/chat_style.css">
<title>eroroChat</title>
<!-- SocketIOを持ってくる -->
<script src="/socket.io/socket.io.js"></script>
<!-- JQueryを持ってくる -->
<script src="//code.jquery.com/jquery-1.11.1.js"></script>
</head>
<body>
<script>
//サーバー側とつなぐため
var socket = io();
var userName = "";

/***********************************
 * JQuery（画面）のイベントハンドラの登録
 * 詳細は以下参照
 * https://api.jquery.com/
 ***********************************/
//HTMLの読み込みが終わった時点で実行される
$(function() {

	/**
	 * 送信されたときの処理  
 	**/
	$('form').submit(function() {
		// メッセージを取得
		var message = $('#msj').val();
		
		// メッセージがなければ終了 
		if (message === '') return false;
		
		// メッセージを送信
		socket.emit('message', userName, message);
		
		// メッセージの中身を空にしえフォーカスする
		$('#msj').val('').focus();
		return false;
	});

	/**
	 * チャンネルを変えた時の処理
 	**/
	$('#channel').on('change', function() {
		// チャンネル変更する
		socket.emit('change channel', $('#channel').val());
	});
});

/***********************************
 * Socket.IOのイベントハンドラの登録
 * 詳細は以下参照
 * https://socket.io/
 ***********************************/
/**
 * 接続したときに呼ばれるイベント
 * ここで作ったイベント名でサーバーサイドの処理を紐付ける
 **/
socket.on('welcome', function(user_name, messageArray) {
	//debug
	console.log(messageArray);
	console.log(user_name);

	//クライアントでユーザ名を保持する
	userName = user_name;

	//取得したメッセージをulに追加
	$('#message').append($('<li>').text('ようこそ' + user_name + 'さん'));

	//DBから取得したメッセージをulに追加
	messageArray.forEach(function(msg) {
		//自分のIDの場合は右に表示
		var whichBaloon = '';
		if(msg.user_name == userName) {
			whichBaloon = 'right';
		} else {
			whichBaloon = 'left';
		}
		$('#message').append($('<li class="' + whichBaloon + '_balloon">').text(msg.user_name + " : " + msg.comment));
	});
});

/**
 * 全ユーザ上のユーザ数を更新
 **/
socket.on('user cnt', function(cnt) {
	// 取得したメッセージをulに追加
	$('#user_cnt p').html('').text("(A :" + cnt.a +"人) (B :" + cnt.b + "人)");
});

/**
 * 誰かがメッセージを送信したときに呼ばれる
 * @param メッセージ
 * @param ユーザID
 **/
socket.on('message', function(user_name, msg) {
	// 取得したメッセージをulに追加
	//自分のIDの場合は右に表示
	var whichBaloon = '';
	if(userName == user_name) {
		whichBaloon = 'right';
	} else {
		whichBaloon = 'left';
	}
	$('#message').append($('<li class="' + whichBaloon + '_balloon">').text(user_name + " : " + msg));
});

/**
 * チャンネルが変更されたときに呼ばれるイベント
 * @param チャンネル
 **/
socket.on('change channel', function(channel) {
	// チャンネルが変わったことをメッセージで表示
	$('#message').html('').append($('<li>').text('「チャンネル' + channel + '」に変更されました!'));
});

/**
 * チャンネルが変わったことをメッセージで表示
 **/
socket.on('get user_name', function(user_name) {
	$('#user_name p').html('').text(user_name);
});

/**
 * ルートにリダイレクトするイベント
 **/
socket.on('redirect', function(destination) {
	window.location.href = destination;
});

</script>
	<a href="/user_log_out" class="btn">ログアウト</a></br>
	<div id="info">
		<!--TODO:下記はexpressのバインドを使えば簡単にかける-->
		<div id="user_name">あなたのID&nbsp;:&nbsp;<p></p></div>
		<div id="user_cnt">アクティブユーザ&nbsp;:&nbsp;<p></p></div>
	</div>
	<ul id="message"></ul>
	<div id="controls">
		<form action="">
			<select name="channel" id="channel">
				<!--チャンネルも動的にオプションを変更可能-->
				<option value="A" selected>Aカップ</option>
				<option value="B">Bカップ</option>
				<option value="kenta_bot">kentaのbotチャンネル</option>
			</select>
			<div class="text_button">
				<input type="text" id="msj" class="msg_textarea" placeholder="メッセージを入力してください...">
				<input class="button" type="submit" value="送信" class="send_button">
		</div>
	</form> 
 </div>
</body>
</html>
